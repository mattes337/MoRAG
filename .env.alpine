# Alpine Container Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# API Keys (REQUIRED)
# =============================================================================

# Gemini API Key (required for embeddings and LLM operations)
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# External Qdrant Configuration (REQUIRED)
# =============================================================================

# Your external Qdrant server details
QDRANT_HOST=your_qdrant_server_ip_here
QDRANT_PORT=6333
QDRANT_COLLECTION_NAME=morag_documents
QDRANT_API_KEY=your_qdrant_api_key_if_needed

# =============================================================================
# Redis Configuration (Docker Compose handles this)
# =============================================================================

REDIS_URL=redis://redis:6379/0

# =============================================================================
# Alpine-Specific Settings (Optimized for Alpine Linux)
# =============================================================================

# Force CPU processing (GPU not available in Alpine containers)
PREFERRED_DEVICE=cpu
FORCE_CPU=true

# Disable dynamic web scraping (Playwright not available in Alpine)
ENABLE_DYNAMIC_WEB_SCRAPING=false
WEB_SCRAPING_FALLBACK_ONLY=true

# Conservative resource limits for Alpine
MAX_CONCURRENT_TASKS=2
CELERY_WORKER_CONCURRENCY=1
MAX_FILE_SIZE=50MB
WHISPER_MODEL_SIZE=base

# =============================================================================
# File Size Limits (Conservative for Alpine)
# =============================================================================

MAX_AUDIO_SIZE=1GB
MAX_VIDEO_SIZE=2GB
MAX_DOCUMENT_SIZE=100MB
MAX_IMAGE_SIZE=50MB

# =============================================================================
# Audio Processing Settings
# =============================================================================

# Use smaller Whisper model for Alpine
WHISPER_MODEL=base
WHISPER_DEVICE=cpu

# Audio processing settings
ENABLE_SPEAKER_DIARIZATION=true
ENABLE_TOPIC_SEGMENTATION=true
AUDIO_CHUNK_LENGTH=30

# =============================================================================
# Document Processing Settings
# =============================================================================

# Use CPU-only document processing
ENABLE_ADVANCED_PDF_PROCESSING=true
PDF_PROCESSING_BACKEND=cpu

# OCR settings
ENABLE_OCR=true
OCR_LANGUAGE=eng+deu+fra+spa

# =============================================================================
# Logging Configuration
# =============================================================================

LOG_LEVEL=INFO
LOG_FILE=logs/morag.log
ENABLE_FILE_LOGGING=true

# =============================================================================
# Development Settings
# =============================================================================

DEBUG=false
TESTING=false

# =============================================================================
# Health Check Settings
# =============================================================================

HEALTH_CHECK_TIMEOUT=30
HEALTH_CHECK_INTERVAL=60

# =============================================================================
# Instructions for Setup
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.alpine .env
#
# 2. Update the following REQUIRED values:
#    - GEMINI_API_KEY: Get from Google AI Studio
#    - QDRANT_HOST: IP address of your Qdrant server
#    - QDRANT_PORT: Port of your Qdrant server (usually 6333)
#    - QDRANT_API_KEY: If your Qdrant server requires authentication
#
# 3. Optional: Adjust resource limits based on your container resources
#
# 4. Start the Alpine container:
#    docker-compose -f docker-compose.alpine.yml up --build
