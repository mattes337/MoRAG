# GPU Worker Configuration Example
# Copy this file to gpu-worker.env and modify for your environment

# ============================================================================
# REQUIRED SETTINGS - Must be configured for your environment
# ============================================================================

# Redis Connection (must match main server)
REDIS_URL=redis://YOUR_MAIN_SERVER_IP:6379/0

# Qdrant Configuration (must match main server)
QDRANT_URL=http://YOUR_MAIN_SERVER_IP:6333
QDRANT_COLLECTION_NAME=morag_vectors

# Gemini API Configuration
GEMINI_API_KEY=your_gemini_api_key_here
MORAG_GEMINI_MODEL=gemini-1.5-flash
MORAG_GEMINI_VISION_MODEL=gemini-1.5-flash

# ============================================================================
# WORKER CONFIGURATION
# ============================================================================

# Worker Identity
WORKER_TYPE=gpu
WORKER_NAME=gpu-worker-01
WORKER_QUEUES=gpu-tasks
WORKER_CONCURRENCY=2

# Celery Configuration
CELERY_SOFT_TIME_LIMIT=7200  # 2 hours (in seconds)
CELERY_TIME_LIMIT=7800       # 2 hours 10 minutes (in seconds)

# ============================================================================
# FILE ACCESS CONFIGURATION - Choose one option
# ============================================================================

# Option A: Shared Network Storage (Recommended)
# Mount shared storage from main server using NFS/SMB
TEMP_DIR=/mnt/morag-shared/temp
UPLOAD_DIR=/mnt/morag-shared/uploads

# Option B: HTTP File Transfer (Alternative)
# Uncomment these lines if using HTTP file transfer instead of shared storage
# MAIN_SERVER_URL=http://YOUR_MAIN_SERVER_IP:8000
# FILE_TRANSFER_MODE=http
# TEMP_DIR=/tmp/morag-gpu-worker
# UPLOAD_DIR=/tmp/morag-gpu-worker

# ============================================================================
# GPU CONFIGURATION
# ============================================================================

# GPU Selection (0 for first GPU, 1 for second, etc.)
CUDA_VISIBLE_DEVICES=0

# Whisper Configuration for Audio Processing
WHISPER_MODEL_SIZE=large-v3  # Options: tiny, base, small, medium, large, large-v2, large-v3
ENABLE_GPU_ACCELERATION=true

# Video Processing Configuration
ENABLE_GPU_VIDEO_ACCELERATION=true

# ============================================================================
# OPTIONAL SETTINGS
# ============================================================================

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json

# Performance Tuning
WORKER_PREFETCH_MULTIPLIER=1
WORKER_MAX_TASKS_PER_CHILD=100

# Cleanup Configuration
CLEANUP_INTERVAL_MINUTES=60
MAX_TEMP_FILE_AGE_HOURS=24

# Health Check Configuration (optional)
HEALTH_CHECK_PORT=8001
HEALTH_CHECK_ENABLED=false

# ============================================================================
# ADVANCED SETTINGS - Usually don't need to change
# ============================================================================

# Task Routing
TASK_DEFAULT_QUEUE=gpu-tasks
TASK_DEFAULT_EXCHANGE=gpu-tasks
TASK_DEFAULT_ROUTING_KEY=gpu-tasks

# Connection Settings
BROKER_CONNECTION_RETRY_ON_STARTUP=true
BROKER_CONNECTION_RETRY=true
BROKER_CONNECTION_MAX_RETRIES=10

# Result Backend Settings
RESULT_BACKEND_TRANSPORT_OPTIONS={"master_name": "mymaster"}
RESULT_EXPIRES=3600  # 1 hour

# ============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# ============================================================================

# Example for local development:
# REDIS_URL=redis://localhost:6379/0
# QDRANT_URL=http://localhost:6333
# TEMP_DIR=/tmp/morag-temp
# UPLOAD_DIR=/tmp/morag-uploads

# Example for Docker deployment:
# REDIS_URL=redis://host.docker.internal:6379/0
# QDRANT_URL=http://host.docker.internal:6333
# TEMP_DIR=/app/temp
# UPLOAD_DIR=/app/uploads

# Example for production with dedicated GPU server:
# REDIS_URL=redis://10.0.1.100:6379/0
# QDRANT_URL=http://10.0.1.100:6333
# TEMP_DIR=/mnt/nfs-shared/morag/temp
# UPLOAD_DIR=/mnt/nfs-shared/morag/uploads
# WORKER_NAME=gpu-server-01
# WORKER_CONCURRENCY=4

# ============================================================================
# SECURITY NOTES
# ============================================================================

# 1. Keep this file secure - it contains API keys and connection details
# 2. Use strong, unique API keys for production
# 3. Consider using environment-specific configuration management
# 4. Restrict network access using firewalls
# 5. Use VPN or private networks for worker communication
# 6. Regularly rotate API keys and credentials

# ============================================================================
# TROUBLESHOOTING
# ============================================================================

# If worker fails to connect:
# 1. Check REDIS_URL is accessible from GPU worker machine
# 2. Verify firewall allows connections on required ports
# 3. Test connectivity: redis-cli -u $REDIS_URL ping

# If file access fails:
# 1. Verify shared storage is mounted correctly
# 2. Check directory permissions and ownership
# 3. Test file creation: touch $TEMP_DIR/test.txt

# If GPU not detected:
# 1. Check NVIDIA drivers: nvidia-smi
# 2. Verify CUDA installation: nvcc --version
# 3. Check GPU visibility: echo $CUDA_VISIBLE_DEVICES

# If tasks not routing to GPU worker:
# 1. Check worker registration: celery -A morag.worker inspect active_queues
# 2. Verify queue configuration matches server settings
# 3. Check server logs for routing decisions
