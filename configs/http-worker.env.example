# HTTP Remote Worker Configuration - No Redis Required
# Copy this file to .env in your worker directory and configure for your environment

# ============================================================================
# REQUIRED SETTINGS - Must be configured for your environment
# ============================================================================

# Main Server Connection (REQUIRED)
MORAG_SERVER_URL=http://your-main-server:8000
MORAG_API_KEY=your-api-key-here

# ============================================================================
# WORKER CONFIGURATION
# ============================================================================

# Worker Type: gpu, cpu
WORKER_TYPE=gpu

# Polling interval in seconds (how often to check for new tasks)
POLL_INTERVAL=5

# Maximum concurrent tasks per worker
MAX_CONCURRENT_TASKS=1

# HTTP timeout in seconds
HTTP_TIMEOUT=300

# ============================================================================
# PERFORMANCE SETTINGS
# ============================================================================

# Force CPU processing (set to true for CPU-only workers)
MORAG_FORCE_CPU=false

# GPU settings (if available)
CUDA_VISIBLE_DEVICES=0

# CPU thread limits (adjust based on your hardware)
OMP_NUM_THREADS=4
MKL_NUM_THREADS=4
OPENBLAS_NUM_THREADS=4
VECLIB_MAXIMUM_THREADS=4
NUMEXPR_NUM_THREADS=4

# PyTorch CPU compatibility (for older CPUs)
PYTORCH_DISABLE_NNPACK=0
PYTORCH_DISABLE_AVX=0
PYTORCH_DISABLE_AVX2=0

# ============================================================================
# CACHE DIRECTORIES
# ============================================================================

# Model cache directories (will be created automatically)
HF_HOME=/home/morag/.cache/huggingface
TRANSFORMERS_CACHE=/home/morag/.cache/huggingface
WHISPER_CACHE_DIR=/home/morag/.cache/whisper

# ============================================================================
# OPTIONAL FEATURES
# ============================================================================

# YouTube cookie file path (for accessing private/age-restricted videos)
YOUTUBE_COOKIES_FILE=
YOUTUBE_COOKIES_PATH=./cookies

# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Worker health check port
HEALTH_CHECK_PORT=8080

# ============================================================================
# DOCKER SPECIFIC SETTINGS
# ============================================================================

# Container restart policy
RESTART_POLICY=unless-stopped

# Memory limits (optional)
MEMORY_LIMIT=4g
MEMORY_RESERVATION=2g

# CPU limits (optional)
CPU_LIMIT=2.0
CPU_RESERVATION=1.0

# ============================================================================
# EXAMPLE CONFIGURATIONS
# ============================================================================

# Example 1: High-performance GPU worker
# WORKER_TYPE=gpu
# MAX_CONCURRENT_TASKS=2
# POLL_INTERVAL=3
# MORAG_FORCE_CPU=false
# CUDA_VISIBLE_DEVICES=0
# OMP_NUM_THREADS=8

# Example 2: CPU-only worker for compatibility
# WORKER_TYPE=cpu
# MAX_CONCURRENT_TASKS=1
# POLL_INTERVAL=10
# MORAG_FORCE_CPU=true
# OMP_NUM_THREADS=2
# PYTORCH_DISABLE_NNPACK=1
# PYTORCH_DISABLE_AVX=1
# PYTORCH_DISABLE_AVX2=1

# Example 3: Multiple workers on same machine
# Use different container names and ports:
# CONTAINER_NAME_SUFFIX=_worker1
# HEALTH_CHECK_PORT=8080
# 
# For second worker:
# CONTAINER_NAME_SUFFIX=_worker2
# HEALTH_CHECK_PORT=8081

# ============================================================================
# SECURITY NOTES
# ============================================================================

# 1. Keep your API key secure and never commit it to version control
# 2. Use environment-specific .env files
# 3. Consider using Docker secrets for production deployments
# 4. Regularly rotate API keys
# 5. Monitor worker access logs

# ============================================================================
# TROUBLESHOOTING
# ============================================================================

# Common issues and solutions:

# Issue: Worker can't connect to server
# Solution: Check MORAG_SERVER_URL and network connectivity

# Issue: Authentication failed
# Solution: Verify MORAG_API_KEY is correct and not expired

# Issue: Out of memory errors
# Solution: Reduce MAX_CONCURRENT_TASKS or increase memory limits

# Issue: Slow processing
# Solution: Increase OMP_NUM_THREADS or use GPU worker

# Issue: GPU not detected
# Solution: Install NVIDIA Docker runtime and set CUDA_VISIBLE_DEVICES

# Issue: Model download failures
# Solution: Check internet connection and HF_HOME permissions
