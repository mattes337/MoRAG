# HTTP Remote Worker Dockerfile - No Redis Required
# This creates a remote worker that connects directly to the main server via HTTP
FROM python:3.11-slim AS base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    ffmpeg \
    tesseract-ocr \
    tesseract-ocr-eng \
    tesseract-ocr-deu \
    libreoffice \
    poppler-utils \
    chromium \
    chromium-driver \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libsndfile1 \
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libxss1 \
    libgtk-3-0 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libcairo-gobject2 \
    libgdk-pixbuf2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Set Chrome/Chromium path for web scraping
ENV CHROME_BIN=/usr/bin/chromium
ENV CHROMEDRIVER_PATH=/usr/bin/chromedriver

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip
RUN pip install --upgrade pip

# Dependencies stage
FROM base AS dependencies

WORKDIR /build

# Copy requirements and install base dependencies
COPY requirements.txt ./
RUN pip install -r requirements.txt

# Install additional HTTP worker dependencies
RUN pip install aiohttp aiofiles

# Download spaCy model (optional)
RUN python -m spacy download en_core_web_sm || echo "spaCy model download failed, will use fallback"

# Builder stage
FROM dependencies AS builder

# Copy and install MoRAG packages
COPY packages/ ./packages/

# Install MoRAG packages in dependency order
RUN pip install -e /build/packages/morag-core && \
    pip install -e /build/packages/morag-embedding && \
    pip install -e /build/packages/morag-audio && \
    pip install -e /build/packages/morag-video && \
    pip install -e /build/packages/morag-document && \
    pip install -e /build/packages/morag-image && \
    pip install -e /build/packages/morag-web && \
    pip install -e /build/packages/morag-youtube && \
    pip install -e /build/packages/morag-services && \
    pip install -e /build/packages/morag

# Runtime stage
FROM python:3.11-slim AS runtime

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ffmpeg \
    tesseract-ocr \
    tesseract-ocr-eng \
    tesseract-ocr-deu \
    libreoffice \
    poppler-utils \
    chromium \
    chromium-driver \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libsndfile1 \
    git \
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libxss1 \
    libgtk-3-0 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libcairo-gobject2 \
    libgdk-pixbuf2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Set Chrome/Chromium path
ENV CHROME_BIN=/usr/bin/chromium
ENV CHROMEDRIVER_PATH=/usr/bin/chromedriver

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Install Playwright browsers (optional)
RUN python -m playwright install chromium || echo "Playwright browser installation failed, will use fallback"

# Create app user
RUN groupadd -r morag && useradd -r -g morag -m -d /home/morag morag

# Create app directory
WORKDIR /app

# Copy application code
COPY packages/ ./packages/
COPY scripts/ ./scripts/

# Create necessary directories and set permissions
RUN mkdir -p temp logs data /home/morag/.cache/huggingface /home/morag/.cache/whisper /home/morag/.cache/transformers && \
    chmod -R 755 /home/morag/.cache && \
    chmod +x scripts/start_http_remote_worker.py && \
    chown -R morag:morag /app /home/morag

# Switch to app user
USER morag

# Set cache directories
ENV HF_HOME=/home/morag/.cache/huggingface
ENV TRANSFORMERS_CACHE=/home/morag/.cache/huggingface
ENV WHISPER_CACHE_DIR=/home/morag/.cache/whisper

# Default command - requires environment variables to be set
CMD python scripts/start_http_remote_worker.py \
    --server-url ${MORAG_SERVER_URL} \
    --api-key ${MORAG_API_KEY} \
    --worker-type ${WORKER_TYPE:-gpu} \
    --poll-interval ${POLL_INTERVAL:-5} \
    --max-concurrent ${MAX_CONCURRENT_TASKS:-1}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose health check port (optional)
EXPOSE 8080

# Labels
LABEL maintainer="MoRAG Team"
LABEL description="HTTP Remote Worker for MoRAG - No Redis Required"
LABEL version="1.0"
