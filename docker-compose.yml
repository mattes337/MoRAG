services:

  # Qdrant vector database
#  qdrant:
#    image: qdrant/qdrant:latest
#    container_name: morag-qdrant
#    restart: unless-stopped
#    ports:
#      - "6333:6333"
#      - "6334:6334"
#    volumes:
#      - qdrant_data:/qdrant/storage
#    environment:
#      - QDRANT__SERVICE__HTTP_PORT=6333
#      - QDRANT__SERVICE__GRPC_PORT=6334

  # MoRAG API Server
  morag-api:
    build:
      context: .
      target: production
    container_name: morag-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - HF_HOME=/app/temp/cache/huggingface
      - TRANSFORMERS_CACHE=/app/temp/cache/huggingface
      - WHISPER_CACHE_DIR=/app/temp/cache/whisper
      # CPU Compatibility Settings
      - MORAG_FORCE_CPU=true
      - MORAG_DISABLE_DOCLING=false
      - OMP_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - OPENBLAS_NUM_THREADS=1
      - VECLIB_MAXIMUM_THREADS=1
      - NUMEXPR_NUM_THREADS=1
      # PyTorch CPU Compatibility
      - PYTORCH_DISABLE_NNPACK=1
      - PYTORCH_DISABLE_AVX=1
      - PYTORCH_DISABLE_AVX2=1

    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./temp:/app/temp


  # Note: Workers have been replaced with HTTP-based remote workers
  # Use docker-compose.workers.yml for remote worker deployment
  # Or run: python scripts/start_http_remote_worker.py

volumes:
  qdrant_data:
    driver: local

networks:
  default:
    name: morag-network
    driver: bridge
