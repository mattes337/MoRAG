services:

  # Qdrant vector database
#  qdrant:
#    image: qdrant/qdrant:latest
#    container_name: morag-qdrant
#    restart: unless-stopped
#    ports:
#      - "6333:6333"
#      - "6334:6334"
#    volumes:
#      - ./qdrant-data:/qdrant/storage
#    environment:
#      - QDRANT__SERVICE__HTTP_PORT=6333
#      - QDRANT__SERVICE__GRPC_PORT=6334

  # MoRAG API Server
  morag-api:
    build:
      context: .
      target: production
    container_name: morag-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - HF_HOME=/app/temp/cache/huggingface
      - TRANSFORMERS_CACHE=/app/temp/cache/huggingface
      - WHISPER_CACHE_DIR=/app/temp/cache/whisper
      # CPU Compatibility Settings
      - MORAG_FORCE_CPU=true
      - MORAG_DISABLE_DOCLING=false
      - OMP_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - OPENBLAS_NUM_THREADS=1
      - VECLIB_MAXIMUM_THREADS=1
      - NUMEXPR_NUM_THREADS=1
      # PyTorch CPU Compatibility
      - PYTORCH_DISABLE_NNPACK=1
      - PYTORCH_DISABLE_AVX=1
      - PYTORCH_DISABLE_AVX2=1

    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./temp:/app/temp


  # HTTP Remote Worker - CPU only
  morag-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: morag-worker
    restart: unless-stopped
    env_file: .env
    environment:
      # Required: Main server connection
      - MORAG_SERVER_URL=${MORAG_SERVER_URL:-http://morag-api:8000}
      - MORAG_API_KEY=${MORAG_API_KEY:-morag-default-api-key-change-me-in-production}
      
      # Worker configuration
      - WORKER_TYPE=cpu
      - POLL_INTERVAL=${POLL_INTERVAL:-10}
      - MAX_CONCURRENT_TASKS=${MAX_CONCURRENT_TASKS:-2}
      
      # Force CPU processing
      - MORAG_FORCE_CPU=true
      
      # Cache directories
      - HF_HOME=/home/morag/.cache/huggingface
      - TRANSFORMERS_CACHE=/home/morag/.cache/huggingface
      - WHISPER_CACHE_DIR=/home/morag/.cache/whisper
      
      # CPU optimization
      - OMP_NUM_THREADS=${OMP_NUM_THREADS:-2}
      - MKL_NUM_THREADS=${MKL_NUM_THREADS:-2}
      - OPENBLAS_NUM_THREADS=${OPENBLAS_NUM_THREADS:-2}
      - VECLIB_MAXIMUM_THREADS=${VECLIB_MAXIMUM_THREADS:-2}
      - NUMEXPR_NUM_THREADS=${NUMEXPR_NUM_THREADS:-2}
      
      # PyTorch CPU compatibility
      - PYTORCH_DISABLE_NNPACK=1
      - PYTORCH_DISABLE_AVX=1
      - PYTORCH_DISABLE_AVX2=1
    
    volumes:
      # Cache directories for models
      - ./cache:/home/morag/.cache
      - ./logs:/app/logs
      - ./temp:/app/temp
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  # Note: Workers have been replaced with HTTP-based remote workers
  # Use docker-compose.workers.yml for remote worker deployment
  # Or run: python scripts/start_http_remote_worker.py
